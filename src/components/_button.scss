
/* WuX-UI Components-Button */

@import "../customize/components/button";

.#{$prefix}btn,
.#{$prefix}btn.#{$prefix}solid {
	position: relative;
	box-shadow: none;
	cursor: pointer;
	font-weight: 400;
	margin: 0;
	margin-right: $button-margin-right;
	margin-bottom: $button-margin-bottom;
	white-space: nowrap;
  vertical-align: middle;
  transition: $global-animation-speed;
	  -webkit-transition: $global-animation-speed; // Safari
	text-decoration: none;
	user-select: none;
	  -webkit-user-select: none;
	  -moz-user-select: none;

	// Default
  background-color: map.get($button-background-color-map,"primary");
	color: map.get($button-text-color-map,"primary");
	border: $button-solid-border-width solid map.get($button-border-color-map,"primary");
	border-radius: map.get($button-border-map,"default-md");
  padding: map.get($button-padding-y-map,"md") map.get($button-padding-x-map,"md");
	font-size: map.get($button-size-map,"md");

	&:hover:not(:disabled) {
		background-color: map.get($button-border-color-map,"primary");
	}

	&:focus:not(:disabled),
	&.#{$prefix}btn-active {
  	background-color: map.get($button-border-color-map, "primary");
  	color: map.get($button-text-color-map, "primary");

  	outline: none;
	}

	&:disabled {
		opacity: 50% !important;
	}

	// Style:Outline
  &.#{$prefix}btn-outline {
  	background: transparent;
	  color: map.get($button-background-color-map, "primary");
	  border: $button-outline-border-width solid map.get($button-border-color-map,"primary");

  	&:hover:not(:disabled) {
    	background: map.get($button-border-color-map, "primary");
    	color: map.get($button-text-color-map, "primary");
  	}

  	&:focus:not(:disabled),
		&.#{$prefix}btn-active {
  		background-color: map.get($button-border-color-map, "primary");
  		color: map.get($button-text-color-map, "primary");
		}
	}

	// Style:Text
	&.#{$prefix}btn-text {
  	background: transparent;
	  color: map.get($button-background-color-map, "primary");
	  border: none;

  	&:hover:not(:disabled) {
  		background: transparent;
    	color: map.get($button-border-color-map, "primary");
  	}

  	&:focus:not(:disabled),
		&.#{$prefix}btn-active {
  		background-color: transparent;
  		color: map.get($button-border-color-map, "primary");
		}
	}

	// Block
	&.#{$prefix}btn-block {
		width: 100%;
	}

	// FAB
	&.#{$prefix}btn-fab {
		position: fixed;
		z-index: 2;
		bottom: 15px;
		right: 15px;

		&:not(:nth-child(1)) {
			display: none;
		}

		box-shadow: $button-fab-shadow;

		&:hover {
			box-shadow: $button-fab-hover-shadow;
		}
	}

}

// Button Colors/Style
@each $color-name in $imported-colors {
  .#{$prefix}btn-solid.#{$prefix}btn-#{$color-name},
  .#{$prefix}btn-#{$color-name} {
	  background-color: map.get($button-background-color-map, "#{$color-name}");
	  color: map.get($button-text-color-map, "#{$color-name}");
	  border-color: map.get($button-border-color-map, "#{$color-name}");

	  &:hover:not(:disabled){
      background-color: map.get($button-border-color-map,"#{$color-name}");
      color: map.get($button-text-color-map, "#{$color-name}");
	  }

	  &:focus:not(:disabled),
  	&.#{$prefix}btn-active {
   	  background-color: map.get($button-border-color-map, "#{$color-name}");
   	  color: map.get($button-text-color-map, "#{$color-name}");
  	}
	}

  .#{$prefix}btn.#{$prefix}btn-outline.#{$prefix}btn-#{$color-name} {
  	// Default
  	background: transparent;
  	color: map.get($button-border-color-map, "#{$color-name}");
  	border-color: map.get($button-border-color-map, "#{$color-name}");

  	&:hover:not(:disabled) {
   	  background: map.get($button-border-color-map, "#{$color-name}");
   	  color: map.get($button-text-color-map, "#{$color-name}");
  	}

  	&:focus:not(:disabled),
  	&.#{$prefix}btn-active {
   	  background: map.get($button-border-color-map, "#{$color-name}");
   	  color: map.get($button-text-color-map, "#{$color-name}");
  	}
  }

  .#{$prefix}btn.#{$prefix}btn-text.#{$prefix}btn-#{$color-name} {
  	// Default
  	background: transparent;
  	color: map.get($button-background-color-map, "#{$color-name}");
  	border: none;

  	&:hover:not(:disabled) {
  		background: transparent;
   	  color: map.get($button-border-color-map, "#{$color-name}");
  	}

  	&:focus:not(:disabled),
  	&.#{$prefix}btn-active {
  		background: transparent;
   	  color: map.get($button-border-color-map, "#{$color-name}");
   	  box-shadow: none;
  	}
  }
};

// Button Size
@each $size-name in $button-imported-size {
  .#{$prefix}btn-#{$size-name} {
	  padding: map.get($button-padding-y-map,"#{$size-name}") map.get($button-padding-x-map,"#{$size-name}");
	  font-size: map.get($button-size-map,"#{$size-name}");
	  border-radius: map.get($button-border-map,"default-#{$size-name}");
	}
};

// Button-BorderStyle
@each $border-name in $button-imported-border {
  .#{$prefix}btn-#{$border-name} {
    border-radius: map.get($button-border-map,"#{$border-name}");
  }
};

// Button-Group
.#{$prefix}btn-group {
	display: inline-flex; // Delete space when code have newline.
	position: relative;
	white-space: nowrap;
	margin-bottom: $button-margin-bottom;

	.#{$prefix}btn {
		border-radius: 0;
		margin: 0;

		// Default
		&:first-child {
			border-top-left-radius: map.get($button-border-map,"default-md");
			border-bottom-left-radius: map.get($button-border-map,"default-md");
		}

		&:last-child {
			border-top-right-radius: map.get($button-border-map,"default-md");
			border-bottom-right-radius: map.get($button-border-map,"default-md");
		}
	}
}

.#{$prefix}btn-group-outline {
	.#{$prefix}btn {
		border-radius: 0;
		margin: 0;

		// Default
		&:first-child {
			border-top-left-radius: map.get($button-border-map,"default-md");
			border-bottom-left-radius: map.get($button-border-map,"default-md");
		}

		&:last-child {
			border-top-right-radius: map.get($button-border-map,"default-md");
			border-bottom-right-radius: map.get($button-border-map,"default-md");
		}
	}
}

@each $size-name in $button-imported-size {
	.#{$prefix}btn-group-#{$size-name} {

		.#{$prefix}btn {
			font-size: map.get($button-size-map,"#{$size-name}");
			padding: map.get($button-padding-y-map,"#{$size-name}") map.get($button-padding-x-map,"#{$size-name}");

			// Default
			&:first-child {
				border-top-left-radius: map.get($button-border-map,"default-#{$size-name}");
				border-bottom-left-radius: map.get($button-border-map,"default-#{$size-name}");
			}

			&:last-child {
				border-top-right-radius: map.get($button-border-map,"default-#{$size-name}");
				border-bottom-right-radius: map.get($button-border-map,"default-#{$size-name}");
			}
		}
	}
}
